apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: cluster-resources
spec:
  description: Cluster Provision Install select software, operators, namespaces etc. to bootstrap the cluster
  sourceRepos:
    - "https://github.com/pmcjury/argocd-operator-multi-tenant"
    - "https://github.com/pmcjury/argocd-example-apps"
  destinations:
    - namespace: argocd
      server: https://kubernetes.default.svc
    - namespace: kube-system
      server: https://kubernetes.default.svc
    - namespace: metrics
      server: https://kubernetes.default.svc
    - namespace: prometheus
      server: https://kubernetes.default.svc
    - namespace: prometheus-operator
      server: https://kubernetes.default.svc
    - namespace: monitoring
      server: https://kubernetes.default.svc
    - namespace: olm
      server: https://kubernetes.default.svc
    - namespace: kube-system
      server: https://kubernetes.default.svc
  # Deny all cluster-scoped resources from being created, except for Namespace
  clusterResourceWhitelist:
    - group: ""
      kind: Namespace
    - group: "policy"
      kind: PodSecurityPolicy
    - group: "rbac.authorization.k8s.io"
      kind: ClusterRole
    - group: "rbac.authorization.k8s.io"
      kind: ClusterRoleBinding
    - group: "admissionregistration.k8s.io"
      kind: ValidatingWebhookConfiguration
    - group: "admissionregistration.k8s.io"
      kind: MutatingWebhookConfiguration
    - group: "apiextensions.k8s.io"
      kind: CustomResourceDefinition
  # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
  # namespaceResourceBlacklist:
  #   - group: ""
  #     kind: ResourceQuota
  #   - group: ""
  #     kind: LimitRange
  #   - group: ""
  #     kind: NetworkPolicy
  # roles:
  #   # A role which provides read-only access to all applications in the project
  #   - name: read-only
  #     description: Read-only privileges to team1-project
  #     policies:
  #       - p, proj:team1-project:read-only, applications, get, team1-project/*, allow
  #     groups:
  #       - githuborg:group-name
  # A role which provides sync privileges to only the app1-dev application, e.g. to provide
  # sync privileges to a CI system
  # - name: ci-role
  #   description: Sync privileges for app1-dev
  #   policies:
  #     - p, proj:team1-project:ci-role, applications, sync, team1-project/app1-dev, allow
  #   # NOTE: JWT tokens can only be generated by the API server and the token is not persisted
  #   # anywhere by Argo CD. It can be prematurely revoked by removing the entry from this list.
  #   jwtTokens:
  #     - iat: 1535390316
